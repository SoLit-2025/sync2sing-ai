name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_IMAGE_NAME }}:prod
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Connect to EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail
            
            command -v curl >/dev/null || (sudo apt-get update && sudo apt-get install -y curl)
            
            docker pull ${{ secrets.DOCKER_IMAGE_NAME }}:prod
            docker stop ai-server || true
            docker rm ai-server || true

            docker run -d --name ai-server \
              -p 8000:8000 \
              --restart unless-stopped \
              --network backend-network \
              --log-driver json-file \
              --log-opt max-size=10m \
              --log-opt max-file=3 \
              ${{ secrets.DOCKER_IMAGE_NAME }}:prod

            for i in {1..20}; do
              if curl -fsS http://localhost:8000/health >/dev/null; then
                echo "✅ AI server is healthy"
                exit 0
              fi
              sleep 3
            done

            echo "❌ Healthcheck failed"
            docker logs --tail=200 ai-server
            exit 1
